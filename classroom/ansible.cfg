[defaults]

# Specifies number of parallel processes to use (default=5)
forks = 20
# Disables SSH strict key checking
host_key_checking = False
# Controls whether a failed Ansible playbook should create a .retry file.
retry_files_enabled = False
# Disable the cows
nocows = True
# Smart means each new host that has no facts discovered will be scanned, but
# if the same host is addressed in multiple plays it will not be contacted
# again in the playbook run.
gathering = smart
# Allows for configuring fact caching. When a fact cache is enabled and there
# is valid data for a host, Ansible will use that rather than running an
# implicit setup job on a remote host. The value is the name of a cache plugin.
fact_caching = jsonfile
# Defines the directory for the facts that were cached
fact_caching_connection = $HOME/ansible/facts
# Tells Ansible when to expire values from the cache.
fact_caching_timeout = 600
# Enables a list of additional callbacks
callback_whitelist = profile_tasks
# Excludes extensions
inventory_ignore_extensions = secrets.py, .pyc, .cfg, .crt, .ini
# Work around privilege escalation timeouts in ansible:
timeout = 30

[inventory]
# Is set to ‘true’, unparsed inventory sources become fatal errors, they are
# warnings otherwise.
unparsed_is_failed=true

[ssh_connection]
# Ansible operates by sending Ansible modules over an SSH connection from the
# controller to the host machine, as follows:
# 1-Directory creation at host machine
# 2- Transfer of module source
# 3- Execution of code
# SSH pipelining reduces the number of SSH connections to the host machine to
# one per task.
pipelining = True
# Extra SSH options
ssh_args = -o ControlMaster=auto -o ControlPersist=800s
# shorten the ControlPath which is often too long; when it is,
# ssh connection reuse silently fails, making everything slower.
control_path = %(directory)s/%%h-%%r
retries = 3
